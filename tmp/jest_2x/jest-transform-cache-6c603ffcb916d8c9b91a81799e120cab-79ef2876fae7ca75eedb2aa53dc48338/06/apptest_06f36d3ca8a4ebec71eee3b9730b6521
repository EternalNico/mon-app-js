9ef1170a1e36f2b5495b61bd0380c16b
const {
  addNumbers,
  subtractNumbers,
  multiplyNumbers,
  divideNumbers,
  isValidNumber
} = require('../src/utils.js');
describe('Tests de la calculatrice', () => {
  test('Addition de deux nombres', () => {
    expect(addNumbers(2, 3)).toBe(5);
    expect(addNumbers(-1, 1)).toBe(0);
    expect(addNumbers(0.1, 0.2)).toBeCloseTo(0.3);
  });
  test('Soustraction de deux nombres', () => {
    expect(subtractNumbers(5, 3)).toBe(2);
    expect(subtractNumbers(0, 5)).toBe(-5);
    expect(subtractNumbers(10, 10)).toBe(0);
  });
  test('Multiplication de deux nombres', () => {
    expect(multiplyNumbers(3, 4)).toBe(12);
    expect(multiplyNumbers(-2, 5)).toBe(-10);
    expect(multiplyNumbers(0, 100)).toBe(0);
  });
  test('Division de deux nombres', () => {
    expect(divideNumbers(10, 2)).toBe(5);
    expect(divideNumbers(9, 3)).toBe(3);
    expect(divideNumbers(1, 4)).toBe(0.25);
  });
  test('Validation des nombres', () => {
    expect(isValidNumber(42)).toBe(true);
    expect(isValidNumber(0)).toBe(true);
    expect(isValidNumber(-10)).toBe(true);
    expect(isValidNumber(NaN)).toBe(false);
    expect(isValidNumber(Infinity)).toBe(false);
  });
  test('Tests corrigÃ©', () => {
    expect(isValidNumber(Infinity)).toBe(false);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhZGROdW1iZXJzIiwic3VidHJhY3ROdW1iZXJzIiwibXVsdGlwbHlOdW1iZXJzIiwiZGl2aWRlTnVtYmVycyIsImlzVmFsaWROdW1iZXIiLCJyZXF1aXJlIiwiZGVzY3JpYmUiLCJ0ZXN0IiwiZXhwZWN0IiwidG9CZSIsInRvQmVDbG9zZVRvIiwiTmFOIiwiSW5maW5pdHkiXSwic291cmNlcyI6WyJhcHAudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGFkZE51bWJlcnMsIHN1YnRyYWN0TnVtYmVycywgbXVsdGlwbHlOdW1iZXJzLCBkaXZpZGVOdW1iZXJzLCBpc1ZhbGlkTnVtYmVyIH0gPSByZXF1aXJlKCcuLi9zcmMvdXRpbHMuanMnKTtcblxuZGVzY3JpYmUoJ1Rlc3RzIGRlIGxhIGNhbGN1bGF0cmljZScsICgpID0+IHtcbiAgICB0ZXN0KCdBZGRpdGlvbiBkZSBkZXV4IG5vbWJyZXMnLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChhZGROdW1iZXJzKDIsIDMpKS50b0JlKDUpO1xuICAgICAgICBleHBlY3QoYWRkTnVtYmVycygtMSwgMSkpLnRvQmUoMCk7XG4gICAgICAgIGV4cGVjdChhZGROdW1iZXJzKDAuMSwgMC4yKSkudG9CZUNsb3NlVG8oMC4zKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ1NvdXN0cmFjdGlvbiBkZSBkZXV4IG5vbWJyZXMnLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChzdWJ0cmFjdE51bWJlcnMoNSwgMykpLnRvQmUoMik7XG4gICAgICAgIGV4cGVjdChzdWJ0cmFjdE51bWJlcnMoMCwgNSkpLnRvQmUoLTUpO1xuICAgICAgICBleHBlY3Qoc3VidHJhY3ROdW1iZXJzKDEwLCAxMCkpLnRvQmUoMCk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdNdWx0aXBsaWNhdGlvbiBkZSBkZXV4IG5vbWJyZXMnLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChtdWx0aXBseU51bWJlcnMoMywgNCkpLnRvQmUoMTIpO1xuICAgICAgICBleHBlY3QobXVsdGlwbHlOdW1iZXJzKC0yLCA1KSkudG9CZSgtMTApO1xuICAgICAgICBleHBlY3QobXVsdGlwbHlOdW1iZXJzKDAsIDEwMCkpLnRvQmUoMCk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdEaXZpc2lvbiBkZSBkZXV4IG5vbWJyZXMnLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChkaXZpZGVOdW1iZXJzKDEwLCAyKSkudG9CZSg1KTtcbiAgICAgICAgZXhwZWN0KGRpdmlkZU51bWJlcnMoOSwgMykpLnRvQmUoMyk7XG4gICAgICAgIGV4cGVjdChkaXZpZGVOdW1iZXJzKDEsIDQpKS50b0JlKDAuMjUpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnVmFsaWRhdGlvbiBkZXMgbm9tYnJlcycsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KGlzVmFsaWROdW1iZXIoNDIpKS50b0JlKHRydWUpO1xuICAgICAgICBleHBlY3QoaXNWYWxpZE51bWJlcigwKSkudG9CZSh0cnVlKTtcbiAgICAgICAgZXhwZWN0KGlzVmFsaWROdW1iZXIoLTEwKSkudG9CZSh0cnVlKTtcbiAgICAgICAgZXhwZWN0KGlzVmFsaWROdW1iZXIoTmFOKSkudG9CZShmYWxzZSk7XG4gICAgICAgIGV4cGVjdChpc1ZhbGlkTnVtYmVyKEluZmluaXR5KSkudG9CZShmYWxzZSk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdUZXN0cyBjb3JyaWfDqScsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KGlzVmFsaWROdW1iZXIoSW5maW5pdHkpKS50b0JlKGZhbHNlKTtcbiAgICB9KTtcbn0pOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQSxVQUFVO0VBQUVDLGVBQWU7RUFBRUMsZUFBZTtFQUFFQyxhQUFhO0VBQUVDO0FBQWMsQ0FBQyxHQUFHQyxPQUFPLENBQUMsaUJBQWlCLENBQUM7QUFFakhDLFFBQVEsQ0FBQywwQkFBMEIsRUFBRSxNQUFNO0VBQ3ZDQyxJQUFJLENBQUMsMEJBQTBCLEVBQUUsTUFBTTtJQUNuQ0MsTUFB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